<?php
/**
 * @file
 * Code for the CWP: Site settings feature.
 */

include_once 'cwp_site_settings.features.inc';

/**
 * Implements hook_menu().
 */
function cwp_site_settings_menu() {

  $items['admin/cwp'] = array(
    'title' => 'CWP admin',
    'page callback' => 'cwp_site_admin_links',
    'access arguments' => array('access administration menu'),
    'weight' => '20',
  );
  $items['admin/cwp/links'] = array(
    'title' => 'CWP admin',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => '-10',
  );

  return $items;
}

/**
 * Implements hook_block_info_alter().
 */
function cwp_site_settings_block_info_alter(&$blocks, $theme, $code_blocks) {
  // Change text_resize block title text
  if ($blocks['text_resize']) {
    $blocks['text_resize'][0]['title'] = t('Font Size');
  }
}

/**
 * Preprocessor for page.
 */
function cwp_site_settings_preprocess_page(&$vars) {
  // Add search form and redirect to cwp-csp.ca (Wordpress site search)
  $form = drupal_get_form('cwp_search_cwp_site');
  $vars['cwp_search_form']  = drupal_render($form);
}

/**
 * Form builder; mimic cwp-csp.ca site search box.
 */
function cwp_search_cwp_site($form, &$form_state) {

  $form['keyword_search'] = array(
    '#type' => 'textfield',
    '#title' => t('Search'),
    '#title_display' => 'invisible',
    '#size' => 15,
    '#default_value' => '',
    '#attributes' => array('title' => t('Search')),
    '#placeholder' => t('Search'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Search')
  );

  return $form;
}

/**
 * Submit handler for cwp_search_cwp_site.
 */
function cwp_search_cwp_site_submit(&$form, &$form_state) {
  $keyword_string = str_replace(' ', '+', trim($form_state['values']['keyword_search'])); 
  $form_state['redirect'] = 'http://www.cwp-csp.ca?s='. $keyword_string;
}

/**
 * Returns content for cwp_admin_links block.
 *
 * @return
 *  Renderable array of site admin links.
 */
function cwp_site_admin_links() {
  $content = array();
  $links = array();

  if (user_access('edit any resource content')) {
    $links['content'][] = l(t('Resources'), 'admin/cwp/resources');
  }

  if (user_access('edit any featured_content content')) {
    $links['content'][] = l(t('Bottom blocks'), 'admin/cwp/bottom-blocks');
  }

  if (user_access('administer menu')) {
    $links['menu'][] = l(t('Main menu'), 'admin/structure/menu/manage/main-menu');
    $links['menu'][] = l(t('Top menu'), 'admin/structure/menu/manage/menu-top-menu');
  }

  if (user_access('administer taxonomy')) {
    $links['taxonomy'][] = l(t('Category terms'), 'admin/structure/taxonomy/category');
    $links['taxonomy'][] = l(t('Tags'), 'admin/structure/taxonomy/tags');
  }

  if (user_access('administer users')) {
    $links['people'][] = l(t('Users'), 'admin/people');
    $links['people'][] = l(t('Add new user'), 'admin/people/create');
  }

  if (user_access('access broken links report')) {
    $links['other'][] = l(t('Broken links'), 'admin/reports/linkchecker');
  }

  foreach ($links as $section => $list) {
    $content[] = array(
      '#type' => 'fieldset',
      '#title' => $section,
      '#attributes' => array('class' => array('cwp-admin')),
      array(
        '#theme' => 'item_list',
        '#items' => $links[$section],
        '#type' => 'ul',
        '#attributes' => array(
          'class' => array('cwp-admin-links'),
        ),
      ),
    );
  }

  return $content;
}